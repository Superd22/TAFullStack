{"version":3,"sources":["/home/raid/002.Homes/david/TAFullStack/src/$_gendir lazy","/home/raid/002.Homes/david/TAFullStack/src/app/app.component.html","/home/raid/002.Homes/david/TAFullStack/src/app/app.component.scss","/home/raid/002.Homes/david/TAFullStack/src/app/app.component.ts","/home/raid/002.Homes/david/TAFullStack/src/app/app.module.ts","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component.html","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component.scss","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component.ts","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll.component.html","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll.component.scss","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll.component.ts","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-room.component.html","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-room.component.scss","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-room.component.ts","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-tab-select/chat-tab-select.component.html","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-tab-select/chat-tab-select.component.scss","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-tab-select/chat-tab-select.component.ts","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/user-list/user-list.component.html","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/user-list/user-list.component.scss","/home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/user-list/user-list.component.ts","/home/raid/002.Homes/david/TAFullStack/src/app/components/landing/landing.component.html","/home/raid/002.Homes/david/TAFullStack/src/app/components/landing/landing.component.scss","/home/raid/002.Homes/david/TAFullStack/src/app/components/landing/landing.component.ts","/home/raid/002.Homes/david/TAFullStack/src/app/directives/scrollable.directive.ts","/home/raid/002.Homes/david/TAFullStack/src/app/material/material.module.ts","/home/raid/002.Homes/david/TAFullStack/src/app/routing/app-routing.module.ts","/home/raid/002.Homes/david/TAFullStack/src/app/routing/routes/_.routes.ts","/home/raid/002.Homes/david/TAFullStack/src/app/routing/routes/guard/chat-guard.service.ts","/home/raid/002.Homes/david/TAFullStack/src/app/services/chat-room.service.ts","/home/raid/002.Homes/david/TAFullStack/src/app/services/send-bird.service.ts","/home/raid/002.Homes/david/TAFullStack/src/environments/environment.ts","/home/raid/002.Homes/david/TAFullStack/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/app.component.ts","import { ChatRoomService } from './services/chat-room.service';\nimport { SendBirdService } from './services/send-bird.service';\nimport { MaterialModule } from './material/material.module';\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ChatRoomComponent } from './components/chat-room/chat-room.component';\nimport { UserListComponent } from './components/chat-room/user-list/user-list.component';\nimport { ChatRollComponent } from './components/chat-room/chat-roll/chat-roll.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ChatTabSelectComponent } from './components/chat-room/chat-tab-select/chat-tab-select.component';\nimport { ScrollableDirective } from './directives/scrollable.directive';\nimport { ChatRollMessageComponent } from './components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component';\n\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    ChatRoomComponent,\n    UserListComponent,\n    ChatRollComponent,\n    ChatTabSelectComponent,\n    ScrollableDirective,\n    ChatRollMessageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    HttpClientModule\n  ],\n  providers: [SendBirdService, ChatRoomService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/app.module.ts","module.exports = \"<mat-list-item dense [ngClass]=\\\"{self: isOwnMessage}\\\">\\n  <img matListAvatar [src]=\\\"message._sender.profileUrl\\\" (click)=\\\"createDM()\\\">\\n  <h3 matLine> {{message._sender.userId}} </h3>\\n  <p matLine> {{message.message}} </p>\\n\\n</mat-list-item>\\n\\n<mat-card matLine *ngIf=\\\"ytEmbed\\\" class=\\\"ytEmbed\\\">\\n  <mat-card-title>{{ytEmbed.title}}</mat-card-title>\\n  <mat-card-subtitle>{{ytEmbed.author_name}}</mat-card-subtitle>\\n  <mat-card-content [innerHTML]=\\\"ytEmbed.html\\\">\\n\\n  </mat-card-content>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component.html\n// module id = ../../../../../src/app/components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ytEmbed {\\n  margin: 24px;\\n  width: 500px; }\\n\\n.mat-list-item.self {\\n  text-align: right; }\\n  .mat-list-item.self ::ng-deep .mat-list-item-content {\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: reverse;\\n        -ms-flex-direction: row-reverse;\\n            flex-direction: row-reverse; }\\n\\n.mat-list-item .mat-list-avatar {\\n  cursor: pointer; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component.scss\n// module id = ../../../../../src/app/components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component.scss\n// module chunks = main","import { ChatRoomService } from './../../../../services/chat-room.service';\nimport { SendBirdService } from './../../../../services/send-bird.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'tafullstack-chat-roll-message',\n  templateUrl: './chat-roll-message.component.html',\n  styleUrls: ['./chat-roll-message.component.scss']\n})\nexport class ChatRollMessageComponent implements OnInit {\n\n  /** the message object of this component */\n  @Input()\n  public message;\n  /** if this message was sent by ourself */\n  public get isOwnMessage() { return this.sb.isCurrentUser(this.message._sender.userId); }\n\n  public ytEmbed: IYoutubeEmbed = null;\n\n  constructor(protected sb: SendBirdService, protected croom: ChatRoomService,\n    protected http: HttpClient, protected sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.checkForYoutube()\n  }\n\n  public createDM() {\n    if (!this.isOwnMessage)\n      this.croom.createDmWith(this.message._sender);\n  }\n\n\n  public checkForYoutube() {\n    const regex = new RegExp(/youtube\\.com\\/watch.*v=([^&/ ]*)|youtu.be\\/([^&/ ]*)/);\n\n    let match = regex.exec(this.message.message);\n    if (match) {\n\n      this.http.get<IYoutubeEmbed>(\"https://www.youtube.com/oembed?url=\" + match[0] + \"&format=json\").subscribe((data) => {\n        if (data) {\n          this.ytEmbed = data;\n          this.ytEmbed.html = this.sanitizer.bypassSecurityTrustHtml(data.html);\n        }\n      });\n\n    }\n  }\n}\n\n\nexport interface IYoutubeEmbed {\n  author_name: string;\n  author_url: string;\n  height: number;\n  html;\n  provider_name: \"YouTube\"\n  provider_url: \"https://www.youtube.com/\"\n  thumbnail_height: number;\n  thumbnail_url: string;\n  thumbnail_width: number;\n  title: string;\n  type: \"video\"\n  version: string;\n  width: number;\n}\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll-message/chat-roll-message.component.ts","module.exports = \"<div class=\\\"chat-wrapper\\\" fxLayout=\\\"column\\\">\\n\\n  <div class=\\\"fetching\\\" *ngIf=\\\"_queryingMessageList\\\">\\n    <p> Fetching more messages ...</p>\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n  </div>\\n  <div class=\\\"text-messages\\\" tafullstackScrollable fxFlex=\\\"100\\\">\\n    <mat-list>\\n      <tafullstack-chat-roll-message *ngFor=\\\"let message of messages\\\" [message]=\\\"message\\\"> </tafullstack-chat-roll-message>\\n    </mat-list>\\n\\n    <div class=\\\"no-message\\\" *ngIf=\\\"messages.length == 0 && !_queryingMessageList\\\">\\n      <h2>Oh no! It seems there isn't any messages yet...</h2>\\n      <p> Feel free to add the first one ;) </p>\\n    </div>\\n\\n  </div>\\n\\n\\n  <div fxLayout class=\\\"actions\\\" fxFlex=\\\"64px\\\">\\n    <mat-form-field fxFlex=\\\"100\\\" class=\\\"full-width\\\" [floatPlaceholder]=\\\"'never'\\\">\\n      <input matInput placeholder=\\\"Type your message\\\" [(ngModel)]=\\\"newMsgText\\\">\\n    </mat-form-field>\\n\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"sendMessage()\\\">Send!</button>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll.component.html\n// module id = ../../../../../src/app/components/chat-room/chat-roll/chat-roll.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".chat-wrapper {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: calc(100% - 48px);\\n  min-height: calc(100% - 48px);\\n  max-height: calc(100% - 48px); }\\n  .chat-wrapper .text-messages {\\n    overflow-y: scroll; }\\n  .chat-wrapper .no-message {\\n    text-align: center;\\n    font-family: \\\"Verdana\\\"; }\\n    .chat-wrapper .no-message h2 {\\n      font-size: 2em;\\n      margin-bottom: 0px; }\\n\\n.fetching p {\\n  margin: 0px;\\n  padding: 8px 0px;\\n  text-align: center;\\n  background: white;\\n  font-family: \\\"Roboto\\\"; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll.component.scss\n// module id = ../../../../../src/app/components/chat-room/chat-roll/chat-roll.component.scss\n// module chunks = main","import { BaseChannel, PreviousMessageListQuery, UserMessage, FileMessage, AdminMessage } from './../../../../sendbird.d';\nimport { ChatRoomService } from './../../../services/chat-room.service';\nimport { SendBirdService } from './../../../services/send-bird.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ScrollableDirective } from '../../../directives/scrollable.directive';\n\n@Component({\n  selector: 'tafullstack-chat-roll',\n  templateUrl: './chat-roll.component.html',\n  styleUrls: ['./chat-roll.component.scss']\n})\nexport class ChatRollComponent implements OnInit {\n\n  /** channel currently being displayed */\n  public currentChannel: BaseChannel = null;\n  /** querylist for our messages in this channel */\n  private _messageListQuery: PreviousMessageListQuery;\n  private _channelHandler = new this.sb.sb.ChannelHandler();\n  /** if we're currently querying for more messages  */\n  public _queryingMessageList: boolean = false;\n  /** display messages */\n  public messages: (UserMessage | FileMessage | AdminMessage)[] = [];\n\n  /** message currently being typed */\n  public newMsgText: string = \"\";\n\n  @ViewChild(ScrollableDirective)\n  private _scrollable: ScrollableDirective;\n\n  constructor(protected sb: SendBirdService, protected croom: ChatRoomService) {\n    this._channelHandler.onMessageReceived = this.onMessageReceived;\n  }\n\n  ngAfterViewInit() {\n    this._scrollable.onTop.subscribe((event) => {\n      this.fetchMessagesOfChannel();\n    });\n  }\n\n  ngOnInit() {\n    this.sb.sb.addChannelHandler(\"chat-roll-handler\", this._channelHandler);\n\n    this.croom.currentChannel.subscribe((currentChannel) => {\n      if (currentChannel) {\n        this.resetToChannel(currentChannel);\n        this.fetchMessagesOfChannel();\n        this._scrollable.forceBottom();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sb.sb.removeChannelHandler(\"chat-roll-handler\");\n  }\n\n  /**\n   * Check if the given channel is the one currently being displayed\n   * @param channel \n   */\n  public isCurrentChannel(channel: BaseChannel) {\n    return channel.url === this.currentChannel.url;\n  }\n\n  /**\n   * Callback on new message\n   * @param channel \n   * @param message \n   */\n  public onMessageReceived = (channel: BaseChannel, message: UserMessage) => {\n    if (this.isCurrentChannel(channel)) {\n      this.messages.push(message);\n      this._scrollable.scrollToBottomIfNotUp();\n    }\n  }\n\n  /**\n   * Resets the state for this channel\n   * @param channel the channel to reset everything for\n   */\n  private resetToChannel(channel: BaseChannel) {\n    this.currentChannel = channel;\n    this._messageListQuery = channel.createPreviousMessageListQuery();\n    this.messages = [];\n  }\n\n  /**\n   * Fetch 25 more messages in this channel with each call\n   */\n  private fetchMessagesOfChannel() {\n    // Ensure we're not already querying \n    if (!this._queryingMessageList && this._messageListQuery.hasMore) {\n      // We're now querying\n      this._queryingMessageList = true;\n      // Get 25 latest message we don't already have\n      this._messageListQuery.load(25, false, (messages, error) => {\n        this._queryingMessageList = false;\n        if (error) return;\n\n        // Push them into the display array\n        this.messages = messages.concat(this.messages);\n        this._scrollable.scrollToBottomIfNotUp();\n      });\n    }\n  }\n\n  /**\n   * Sends the current typing message to the current channel\n   */\n  public sendMessage() {\n    if (this.newMsgText)\n      this.currentChannel.sendUserMessage(this.newMsgText, (message, error) => {\n        this.newMsgText = \"\";\n        this.messages.push(message);\n        this._scrollable.scrollToBottomIfNotUp();\n      });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-roll/chat-roll.component.ts","module.exports = \"<div class=\\\"container\\\" fxLayout fxLayoutWrap>\\n  <div class=\\\"chat-box\\\" fxLayout fxLayoutWrap>\\n    <div class=\\\"left\\\" fxFlex.lt-md=\\\"100\\\" fxFlex.gt-md=\\\"85\\\" fxLayout=\\\"column\\\">\\n      <tafullstack-chat-tab-select fxFlex></tafullstack-chat-tab-select>\\n      <tafullstack-chat-roll fxFlex=\\\"100\\\"></tafullstack-chat-roll>\\n    </div>\\n    <tafullstack-user-list fxFlex.lt-md=\\\"100\\\" fxFlex.gt-md=\\\"15\\\"></tafullstack-user-list>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-room.component.html\n// module id = ../../../../../src/app/components/chat-room/chat-room.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  height: 100vh; }\\n  .container .chat-box {\\n    margin: auto;\\n    height: 90vh;\\n    width: 90vw; }\\n    .container .chat-box .left {\\n      height: 100%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-room.component.scss\n// module id = ../../../../../src/app/components/chat-room/chat-room.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tafullstack-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss']\n})\nexport class ChatRoomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-room.component.ts","module.exports = \"<div class=\\\"relative\\\">\\n  <nav mat-tab-nav-bar>\\n    <a mat-tab-link *ngIf=\\\"currentChannel?.isGroupChannel()\\\" active=\\\"true\\\" class=\\\"private\\\">Private convo</a>\\n    <a mat-tab-link [active]=\\\"isSelected(channel)\\\" *ngFor=\\\"let channel of channelList\\\" (click)=\\\"navigateToChannel(channel)\\\">\\n      {{channel.name}}\\n    </a>\\n\\n    <a mat-tab-link (click)=\\\"createChannel()\\\">\\n      <mat-icon>add</mat-icon>\\n      Create a channel\\n    </a>\\n  </nav>\\n\\n  <mat-card *ngIf=\\\"createMode\\\">\\n    <mat-card-title>Create a new channel</mat-card-title>\\n    <mat-card-subtitle>Just enter your channel name and tab the button, as easy as that.</mat-card-subtitle>\\n\\n    <mat-card-content>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"An amazing channel name\\\" [formControl]=\\\"channelCreate\\\">\\n        <mat-error *ngIf=\\\"channelCreate.hasError('required')\\\">\\n          Channel name is required\\n        </mat-error>\\n        <mat-error *ngIf=\\\"channelCreate.hasError('minlength')\\\">\\n          Channel name needs to be at least 3 chars.\\n        </mat-error>\\n        <mat-error *ngIf=\\\"channelCreate.hasError('maxlength')\\\">\\n          Channel name needs to be at most 20 chars.\\n        </mat-error>\\n      </mat-form-field>\\n    </mat-card-content>\\n\\n    <mat-card-actions>\\n      <button mat-button (click)=\\\"cancelCreation()\\\">Cancel</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!channelCreate.valid\\\" (click)=\\\"submitNewChannel()\\\">Create my channel !</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-tab-select/chat-tab-select.component.html\n// module id = ../../../../../src/app/components/chat-room/chat-tab-select/chat-tab-select.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".relative {\\n  position: relative; }\\n  .relative .mat-card {\\n    position: absolute;\\n    min-width: 66%;\\n    right: 0px; }\\n\\n.mat-tab-link.private {\\n  background: rgba(0, 0, 0, 0.2);\\n  color: #1d1d1d;\\n  font-weight: bolder; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-tab-select/chat-tab-select.component.scss\n// module id = ../../../../../src/app/components/chat-room/chat-tab-select/chat-tab-select.component.scss\n// module chunks = main","import { FormControl, Validators } from '@angular/forms';\nimport { ChatRoomService } from './../../../services/chat-room.service';\nimport { OpenChannel, BaseChannel } from './../../../../sendbird.d';\nimport { SendBirdService } from './../../../services/send-bird.service';\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Component handling the currently available chat-rooms, switching from one to the other\n * and creating new ones\n */\n@Component({\n  selector: 'tafullstack-chat-tab-select',\n  templateUrl: './chat-tab-select.component.html',\n  styleUrls: ['./chat-tab-select.component.scss']\n})\nexport class ChatTabSelectComponent implements OnInit {\n\n  public channelList: OpenChannel[];\n  public createMode = false;\n  public channelCreate: FormControl;\n\n  public get currentChannel() { return this.croom.currentChannel.getValue(); }\n\n  constructor(protected sb: SendBirdService, protected croom: ChatRoomService) { }\n\n  ngOnInit() {\n    this.getAccessibleChats();\n  }\n\n  public isSelected(channel: BaseChannel): boolean {\n    return this.currentChannel.url === channel.url;\n  }\n\n  /**\n   * Fetch a list of all the chats we have access to from the back-end\n   */\n  private getAccessibleChats() {\n    const queryList = this.sb.sb.OpenChannel.createOpenChannelListQuery();\n\n    queryList.next((list, error) => {\n      if (error) {\n        return;\n      }\n      this.channelList = list;\n\n      // If we don't have a channel, navigate to the first open one.\n      if (!this.croom.currentChannel.getValue()) this.navigateToChannel(this.channelList[0]);\n    });\n  }\n\n  /**\n   * Navigate to the given channel\n   * @param channel the channel to navigate to\n   */\n  public navigateToChannel(channel: OpenChannel) {\n    this.croom.setCurrentChatRoom(channel);\n  }\n\n\n  /**\n   * Toggles the creation mode on\n   */\n  public createChannel() {\n    this.createMode = true;\n    this.channelCreate = new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20)\n    ]);\n  }\n\n  /**\n   * Cancel the creation of a new channel\n   */\n  public cancelCreation() {\n    this.createMode = false;\n  }\n\n  /**\n   * Submits a new channel\n   */\n  public submitNewChannel() {\n    if (this.channelCreate.valid)\n      this.sb.sb.OpenChannel.createChannel(this.channelCreate.value, null, null, (newChannel) => {\n        this.channelList.push(newChannel);\n        this.navigateToChannel(newChannel);\n        this.cancelCreation();\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/chat-tab-select/chat-tab-select.component.ts","module.exports = \"<mat-card>\\n  <mat-list dense>\\n    <mat-list-item *ngFor=\\\"let user of displayUsers\\\" [ngClass]=\\\"{self: isCurrentUser(user)}\\\">\\n      <img matListAvatar [src]=\\\"user.profileUrl\\\">\\n      <h3 matLine> {{user.userId}} </h3>\\n\\n      <button mat-icon-button *ngIf=\\\"!isCurrentUser(user)\\\" (click)=\\\"createDMWith(user)\\\" color=\\\"primary\\\">\\n        <mat-icon>email</mat-icon>\\n      </button>\\n\\n    </mat-list-item>\\n  </mat-list>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/user-list/user-list.component.html\n// module id = ../../../../../src/app/components/chat-room/user-list/user-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-card {\\n  height: 100%;\\n  padding: 0px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/user-list/user-list.component.scss\n// module id = ../../../../../src/app/components/chat-room/user-list/user-list.component.scss\n// module chunks = main","import { BaseChannel, OpenChannel, User, GroupChannel } from './../../../../sendbird.d';\nimport { ChatRoomService } from './../../../services/chat-room.service';\nimport { SendBirdService } from './../../../services/send-bird.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tafullstack-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  /** current channel */\n  private _currentChannel: BaseChannel;\n  /** list of user being displayed */\n  public displayUsers: User[] = [];\n  /** event handler */\n  private _channelHandler = new this.sb.sb.ChannelHandler();\n\n  constructor(protected sb: SendBirdService, protected croom: ChatRoomService) {\n    // Declare our open channel callbacks\n    // Note that we don't need group channel callbacks since they're handled by the api\n    this._channelHandler.onUserExited = this.onUserExited;\n    this._channelHandler.onUserEntered = this.onUserEntered;\n\n    // Check for channel change\n    this.croom.currentChannel.subscribe((channel) => {\n      if (!channel) return;\n\n      this._currentChannel = channel;\n      if (this._currentChannel.isOpenChannel()) this.hydrateOpenChannel();\n      else this.hydratePrivateChannel();\n    });\n  }\n\n  ngOnInit() {\n    this.sb.sb.addChannelHandler(\"user-list-handler\", this._channelHandler);\n  }\n\n  ngOnDestroy() {\n    this.sb.sb.removeChannelHandler(\"user-list-handler\");\n  }\n\n  /**\n   * Create a private convo with the supplied user\n   * @param user \n   */\n  public createDMWith(user: User) {\n    this.croom.createDmWith(user);\n  }\n\n  /**\n   * Check if the supplied user is the current one\n   * @param user \n   */\n  public isCurrentUser(user: User): boolean {\n    return user.userId === this.sb.currentSbUser.getValue().userId;\n  }\n\n  /**\n   * Gets all the participant in this open channel\n   */\n  private hydrateOpenChannel() {\n    const participantListQuery = (<OpenChannel>this._currentChannel).createParticipantListQuery();\n\n    participantListQuery.next((users, error) => {\n      if (error) return;\n\n      this.displayUsers = users;\n    });\n  }\n\n  /**\n   * Gets all the participants in this private channel\n   */\n  private hydratePrivateChannel() {\n    this.displayUsers = (<GroupChannel>this._currentChannel).members;\n  }\n\n  /**\n   * When an user joins an open channel\n   * @param channel \n   * @param user \n   */\n  public onUserEntered = (channel: OpenChannel, user: User) => {\n    if (channel.url === this._currentChannel.url) {\n      // Don't double push\n      const id = this.displayUsers.findIndex((checkUser) => checkUser.userId === user.userId);\n      if (id < 0)\n        this.displayUsers.push(user);\n    }\n  }\n\n  /**\n   * When an user leaves an open channel\n   * @param channel \n   * @param user \n   */\n  public onUserExited = (channel: OpenChannel, user: User) => {\n    // If we're in the right channel\n    if (channel.url === this._currentChannel.url) {\n      if (this.displayUsers) {\n        // Find the guy who left\n        const id = this.displayUsers.findIndex((checkUser) => checkUser.userId === user.userId);\n        // ... And kill him.\n        if (id) this.displayUsers.splice(id, 1);\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/chat-room/user-list/user-list.component.ts","module.exports = \"<div fxLayout class=\\\"wrapper\\\">\\n  <div class=\\\"card-wrap\\\">\\n    <mat-card>\\n      <mat-card-title>Welcome to TAFullStack</mat-card-title>\\n      <mat-card-subtitle>Please chose an username</mat-card-subtitle>\\n\\n      <mat-card-content>\\n        <mat-form-field fxFlex=\\\"80\\\">\\n          <input matInput placeholder=\\\"Some witty nickname\\\" [formControl]=\\\"nickNameFormControl\\\">\\n          <mat-error *ngIf=\\\"nickNameFormControl.hasError('required')\\\">\\n            Username is required\\n          </mat-error>\\n          <mat-error *ngIf=\\\"nickNameFormControl.hasError('minlength')\\\">\\n            Username needs to be at least 3 chars.\\n          </mat-error>\\n        </mat-form-field>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <div fxFlex=\\\"100\\\"></div>\\n        <button fxFlex=\\\"35\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!nickNameFormControl.valid\\\" (click)=\\\"submitNewNickName()\\\">Let's go!</button>\\n      </mat-card-actions>\\n\\n    </mat-card>\\n    <mat-progress-bar *ngIf=\\\"busy\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/landing/landing.component.html\n// module id = ../../../../../src/app/components/landing/landing.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card-wrap {\\n  max-width: 80vw;\\n  min-width: 33vw;\\n  margin: auto; }\\n  .card-wrap .mat-card {\\n    text-align: center; }\\n    .card-wrap .mat-card .mat-input-container {\\n      margin: auto; }\\n    .card-wrap .mat-card button {\\n      -ms-flex-item-align: right;\\n          -ms-grid-row-align: right;\\n          align-self: right; }\\n\\n.wrapper {\\n  padding: 24px;\\n  height: 100vh; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/landing/landing.component.scss\n// module id = ../../../../../src/app/components/landing/landing.component.scss\n// module chunks = main","import { SendBirdService } from './../../services/send-bird.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'tafullstack-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  public busy: boolean = false;\n\n  /** form control for the nickname the user is inputing */\n  public nickNameFormControl = new FormControl('', [\n    Validators.minLength(3),\n    Validators.required\n  ]);\n\n  constructor(protected sb: SendBirdService, protected router: Router) {\n    this.subscribeUserChange();\n  }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Submits a new nickname to the back end if our form is valid.\n   */\n  public async submitNewNickName() {\n    if (this.nickNameFormControl.valid) {\n      this.busy = true;\n      await this.sb.registerUser(this.nickNameFormControl.value);\n      this.busy = false;\n    }\n    else { }\n  }\n\n  /**\n   * Subscribe to internal user change\n   */\n  private subscribeUserChange() {\n    this.sb.currentSbUser.subscribe((user) => {\n      if (user) {\n        // We have an user, we no longer need to be on the landing page\n        this.router.navigate(['/chat']);\n      }\n    });\n  }\n\n  public\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/components/landing/landing.component.ts","import { Directive, HostListener, ElementRef, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[tafullstackScrollable]'\n})\nexport class ScrollableDirective {\n\n  /** if the user is currently at the bottom of the region */\n  private _userBottom = true;\n\n  /** event triggered when the scrollable region reaches the top */\n  @Output()\n  public onTop = new EventEmitter<boolean>();\n\n\n  /**\n   * Callback on scroll\n   */\n  @HostListener(\"scroll\")\n  public onScroll() {\n    const scrollPercent = (this._el.scrollTop + this._el.offsetHeight) / this._el.scrollHeight * 100;\n\n    // If we're at the bottom (with some wiggle room), fix ourselves.\n    if (scrollPercent >= 99) this._userBottom = true;\n    else this._userBottom = false;\n\n    // If we're at the top, emit an event.\n    if (this._el.scrollTop <= 50) {\n      this.onTop.emit(true);\n    }\n  }\n\n  /**\n   * sticks to the bottom if the user hasn't scrolled on its own.\n   */\n  public scrollToBottomIfNotUp() {\n    if (this._userBottom) {\n      setTimeout(() => this._el.scrollBy(0, this._el.scrollHeight));\n    }\n  }\n\n  /**\n   * Force a scroll to the bottom\n   */\n  public forceBottom() {\n    this._userBottom = true;\n    setTimeout(() => this._el.scrollBy(0, this._el.scrollHeight));\n  }\n\n  /** the element we're currently scrolling */\n  private get _el(): HTMLElement { return this._elRef.nativeElement; }\n\n  constructor(protected _elRef: ElementRef) { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/directives/scrollable.directive.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatCardModule, MatToolbarModule, MatInputModule, MatProgressBarModule, MatTabsModule, MatListModule, MatIconModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst materialImports = [\n  MatButtonModule, MatCardModule, MatToolbarModule, MatInputModule,\n  MatProgressBarModule, BrowserAnimationsModule, MatTabsModule, MatListModule,\n  MatIconModule\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ...materialImports\n  ],\n  exports: [...materialImports],\n  declarations: []\n})\nexport class MaterialModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/material/material.module.ts","import { ChatGuard } from './routes/guard/chat-guard.service';\nimport { environment } from './../../environments/environment';\nimport { appRoutes } from './routes/_.routes';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(appRoutes, {\n      enableTracing: !environment.production\n    })\n  ],\n  exports: [RouterModule],\n  declarations: [],\n  providers: [ChatGuard]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/routing/app-routing.module.ts","import { ChatGuard } from './guard/chat-guard.service';\r\nimport { ChatRoomComponent } from './../../components/chat-room/chat-room.component';\r\nimport { LandingComponent } from './../../components/landing/landing.component';\r\nimport { Routes } from '@angular/router';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: 'landing', component: LandingComponent },\r\n    { path: 'chat', canActivate: [ChatGuard], component: ChatRoomComponent },\r\n    { path: '', redirectTo: '/landing', pathMatch: 'full' },\r\n    { path: '**', redirectTo: '/landing' },\r\n]\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/routing/routes/_.routes.ts","import { SendBirdService } from './../../../services/send-bird.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\n\r\n\r\n/**\r\n * Guard against access to the chat as a non authed user.\r\n */\r\n@Injectable()\r\nexport class ChatGuard implements CanActivate {\r\n\r\n    constructor(protected sb: SendBirdService) { }\r\n\r\n    canActivate() {\r\n        // Simply ensure we have an sb user\r\n        return Boolean(this.sb.currentSbUser.getValue());\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/routing/routes/guard/chat-guard.service.ts","import { OpenChannel, User } from './../../sendbird.d';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { SendBirdService } from './send-bird.service';\nimport { BaseChannel } from '../../sendbird.d';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class ChatRoomService {\n\n  private _currentChannel: BehaviorSubject<BaseChannel> = new BehaviorSubject(null);\n  public get currentChannel() { return this._currentChannel; }\n\n  constructor(protected sb: SendBirdService) { }\n\n  /**\n   * Sets the current channel for the user\n   * @param channelUrl the url of the channel\n   * @param channel the channel object\n   * @param open if this is the url for an open or group channel\n   */\n  public setCurrentChatRoom(channelUrl: string, open: boolean)\n  public setCurrentChatRoom(channel: BaseChannel)\n  public setCurrentChatRoom(channel: any) {\n    // We were given a channel url\n    if (typeof channel === typeof \"abc\") {\n      // fetch our open channel or our group channel\n      open ? this.sb.sb.OpenChannel.getChannel(channel, (fetchedChannel) => channel = fetchedChannel) :\n        this.sb.sb.GroupChannel.getChannel(channel, (fetchedChannel) => channel = fetchedChannel);\n    }\n    const newChannel = <BaseChannel>channel;\n    if (newChannel) {\n      const oldChan = this.currentChannel.getValue();\n\n      // We're trying to re-enter the same thing, no need.\n      if (oldChan && oldChan.url === newChannel.url) return;\n\n      // If we were in an open channel before, stop listening to it now.\n      if (oldChan && oldChan.isOpenChannel()) (<OpenChannel>oldChan).exit((channel, error) => { });\n\n      // If we're setting an open channel as the current, we want to enter it (subscribe to events in it)\n      if (newChannel.isOpenChannel()) (<OpenChannel>newChannel).enter((openChannel, error) => { });\n\n      // Finally we can tell the app this is now the new main channel\n      this._currentChannel.next(newChannel);\n    }\n  }\n\n  /**\n   * Creates a private 1 on 1 with the supplied user\n   * @param user \n   */\n  public createDmWith(user: User);\n  public createDmWith(user: { userId: any });\n  public createDmWith(userId: string);\n  public createDmWith(u: any) {\n    if (typeof u === typeof {}) u = u.userId;\n\n    if (this.sb.isCurrentUser(u)) throw \"trying to create a convo with oneself. -that's deep-\";\n\n    this.sb.sb.GroupChannel.createChannelWithUserIds([u], true, (groupChannel, error) => {\n      if (error) {\n        return;\n      }\n\n      this.setCurrentChatRoom(groupChannel);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/services/chat-room.service.ts","import { SendBirdInstance, User } from '../../sendbird.d';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** @see sendbird.d.ts */\ndeclare var SendBird;\n\n\n/**\n* Main helper service for SendBird\n*/\n@Injectable()\nexport class SendBirdService {\n\n  /** main sendbird instance */\n  private _sb: SendBirdInstance = new SendBird({ appId: \"C7B940CE-B68D-4979-9E95-7C2CD94DE2F3\" });\n  /** app-wide sendbird instance */\n  public get sb() { return this._sb }\n\n  private _currentSbUser: BehaviorSubject<User> = new BehaviorSubject(null);\n  public get currentSbUser() { return this._currentSbUser; }\n\n  constructor() {\n    //this.registerUser(String(Math.floor(Math.random() * 9e15)));\n  }\n\n  /**\n   * Registers as a given user to sendbird\n   * @param userName unique name to chose\n   */\n  public async registerUser(userName: string) {\n    return new Promise((resolve, reject) => this._sb.connect(userName, (user, error) => {\n      if (!error) {\n        this._currentSbUser.next(user);\n        resolve(user);\n      }\n      else reject(error);\n    }));\n  }\n\n\n  /**\n   * Check if the supplied user is the current one\n   * @param user \n   * @param userId the id of the user to check against\n   */\n  public isCurrentUser(user: User): boolean;\n  public isCurrentUser(userId: any): boolean;\n  public isCurrentUser(u): boolean {\n    const uid = typeof u === typeof {} ? u.userId : u;\n    return uid === this.currentSbUser.getValue().userId;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/app/services/send-bird.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/raid/002.Homes/david/TAFullStack/src/main.ts"],"sourceRoot":"webpack:///"}